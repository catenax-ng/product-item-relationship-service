# Default values for edc-provider-data-plane.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/catenax-ng/catenax-at-home/provider-data-plane
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: "edc-provider-dataplane"
fullnameOverride: "edc-provider-dataplane"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

## EDC endpoints exposed by the data-plane
edc:
  endpoints:
    ## Default api exposing health checks etc
    default:
      # -- The network port, which the "default" api is going to be exposed by the container, pod and service
      port: "8080"
      # -- The path mapping the "default" api is going to be exposed by
      path: /api
    ## Public endpoint for data transfer
    public:
      # -- The network port, which the "public" api is going to be exposed by the container, pod and service
      port: "8185"
      # -- The path mapping the "public" api is going to be exposed by
      path: /api/public
    ## Control API
    control:
      # -- The network port, which the "control" api is going to be exposed by the container, pod and service
      port: "9999"
      # -- The path mapping the "control" api is going to be exposed by
      path: /api/dataplane/control
    ## Prometheus endpoint
    metrics:
      # -- The network port, which the prometheus metrics are going to be exposed by the container, pod and service
      port: "9090"
      # -- The path mapping the prometheus metrics are going to be exposed at
      path: /metrics

service:
  type: ClusterIP
  port: 8185

ingress:
  enabled: false
  className: "nginx"
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-passthrough: "false"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
  hosts:
    - host: "irs-edc-provider-dataplane.dev.demo.catena-x.net"
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: api
              port:
                number: 8185
  tls:
    - hosts:
        - "irs-edc-provider-dataplane.dev.demo.catena-x.net"
      # Default secret for certificate creation already provided to your namespace
      secretName: tls-secret


resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 500m
    memory: 512Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

# Following Catena-X Helm Best Practices @url: https://catenax-ng.github.io/docs/kubernetes-basics/helm
# @url: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: DoesNotExist
          topologyKey: kubernetes.io/hostname

# Following Catena-X Helm Best Practices @url: https://catenax-ng.github.io/docs/kubernetes-basics/helm
# @url: https://github.com/helm/charts/blob/master/stable/nginx-ingress/values.yaml#L210
livenessProbe:
  failureThreshold: 6
  initialDelaySeconds: 30
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1
readinessProbe:
  failureThreshold: 3
  initialDelaySeconds: 30
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1

##
## opentelemetry.properties configuring the opentelemetry agent
##
## See https://opentelemetry.io/docs/instrumentation/java/automatic/agent-config/ for further configuration options
##
opentelemetry:
  properties: |-
    otel.javaagent.enabled=false
    otel.javaagent.debug=false

##
## EDC logging.properties configuring the java.util.logging subsystem
##
logging:
  properties: |-
    .level=INFO
    org.eclipse.dataspaceconnector.level=ALL
    handlers=java.util.logging.ConsoleHandler
    java.util.logging.ConsoleHandler.formatter=java.util.logging.SimpleFormatter
    java.util.logging.ConsoleHandler.level=ALL
    java.util.logging.SimpleFormatter.format=[%1$tY-%1$tm-%1$td %1$tH:%1$tM:%1$tS] [%4$-7s] %5$s%6$s%n


configuration:
  properties: |-
    edc.api.control.auth.apikey.key=X-Api-Key
    edc.api.control.auth.apikey.value=123456
    # edc.datasource.asset.name="default"
    # edc.datasource.contractdefinition.name="default"
    # edc.datasource.contractnegotiation.name="default"
    # edc.datasource.policy.name="default"
    # edc.datasource.transferprocess.name="default"
    edc.oauth.client.id=D9:3A:80:9E:9C:21:95:12:5C:C2:1D:D8:30:80:7A:B9:DD:5F:C9:09:keyid:D9:3A:80:9E:9C:21:95:12:5C:C2:1D:D8:30:80:7A:B9:DD:5F:C9:09
    edc.oauth.private.key.alias=dev-data-plane-private-key
    edc.oauth.provider.audience=idsc:IDS_CONNECTORS_ALL
    # edc.oauth.provider.jwks.refresh=
    edc.oauth.provider.jwks.url=https://daps.int.demo.catena-x.net/.well-known/jwks.json
    edc.oauth.public.key.alias=dev-data-plane-cert
    edc.oauth.token.url=https://daps.int.demo.catena-x.net/token
    edc.receiver.http.endpoint=http://aaswrapper:9192/callback
    edc.transfer.proxy.endpoint=http://irs-edc-provider.dev.demo.catena-x.net:8181/api/public
    # edc.transfer.dataplane.sync.token.validity=
    edc.transfer.proxy.token.signer.privatekey.alias=azure-vault-token-signer-private-key
    edc.vault.tenantid=495463c3-0991-4659-9cc5-94b4a3f7b1d6
    edc.vault.clientid=c1778e7d-db16-4404-9080-26d2280d2f63
    edc.vault.clientsecret=<path:product-traceability-irs/data/dev/controlplane#devVaultClientSecret>
    edc.vault.name=cxtsi-dev001-vault

env:
  - name: EDC_VAULT
    value: "/config/vault.properties"
  - name: EDC_KEYSTORE
    value: "/cert.pfx"
  - name: EDC_KEYSTORE_PASSWORD
    value: "123456" 
  - name: EDC_FS_CONFIG
    value: "/config/configuration.properties"

     
    
