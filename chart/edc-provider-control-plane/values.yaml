# Default values for edc-provider-control-plane.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/catenax-ng/catenax-at-home/provider-control-plane
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: "edc-provider-controlplane"
fullnameOverride: "edc-provider-controlplane"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

##
## Whether to enable kubernetes liveness-probes
##
livenessProbe:
  enabled: false

##
## Whether to enable kubernetes readiness-probes
##
readinessProbe:
  enabled: false

##
## Whether to enable kubernetes startup-probes
##
startupProbe:
  enabled: false

##
## EDC endpoints exposed by the conrol-plane
##
edc:
  endpoints:
    # Default api exposing health checks etc
    default:
      port: "9191"
      path: /api
      ingress: false
    # Data management API
    data:
      port: "9193"
      path: /data
      ingress: true
    # Validation API
    validation:
      port: "9192"
      path: /validation
      ingress: false
    # Control API
    control:
      port: "9999"
      path: /api/controlplane/control
      ingress: true
    # IDS endpoints
    ids:
      port: "8282"
      path: /api/v1/ids
      ingress: true
    # Prometheus endpoint
    metrics:
      port: "8090"
      path: /metrics
      ingress: false

##
## Service to expose the running application on a set of Pods as a network service.
##
service:
  type: ClusterIP

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

##
## EDC logging.properties configuring the java.util.logging subsystem
##
logging:
  properties: |-
    .level=INFO
    org.eclipse.dataspaceconnector.level=ALL
    handlers=java.util.logging.ConsoleHandler
    java.util.logging.ConsoleHandler.formatter=java.util.logging.SimpleFormatter
    java.util.logging.ConsoleHandler.level=ALL
    java.util.logging.SimpleFormatter.format=[%1$tY-%1$tm-%1$td %1$tH:%1$tM:%1$tS] [%4$-7s] %5$s%6$s%n
##
## opentelemetry.properties configuring the opentelemetry agent
##
## See https://opentelemetry.io/docs/instrumentation/java/automatic/agent-config/ for further configuration options
##
opentelemetry:
  properties: |-
    otel.javaagent.enabled=false
    otel.javaagent.debug=false
##
## EDC configuration.properties
##
## Consult the eclipse-dataspaceconnector documentation for further details: https://github.com/eclipse-dataspaceconnector/DataSpaceConnector
##
configuration:
  properties: |-
    edc.ids.id=urn:connector:provider-control-plane
    ids.webhook.address=http://edc-provider-control-plane:8282
    
    web.http.port=9191
    web.http.path=/api
    
    web.http.validation.port=9192
    web.http.validation.path=/validation
    
    web.http.data.port=9193
    web.http.data.path=/api/v1/data
    
    web.http.ids.port=8282
    web.http.ids.path=/api/v1/ids
    
    edc.receiver.http.endpoint=http://edc-provider-control-plane:9191/api/service/pull
    
    edc.security.private-key.alias=1
    edc.public.key.alias=public-key
    
    edc.transfer.dataplane.token.signer.privatekey.alias=1
    edc.transfer.dataplane.sync.endpoint=http://edc-provider-data-plane:9192/public